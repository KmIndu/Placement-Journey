pehli approach glt hai.... dhyan diyo.

https://www.youtube.com/watch?v=EtQhl51GDA0

The below approach will not work when- target=3 startValue=10.
This is wrong way of approaching the problem.

class Solution {
public:
    int mini=INT_MAX;
    
    void helper(int startValue, int target, int operations)
    {
        if(startValue>target)
            return;
        
        if(startValue==target)
            mini=min(mini, operations);
        
        helper(startValue*2, target, operations+1);
        helper(startValue-1, target, operations+1);
    }
    
    int brokenCalc(int startValue, int target) {
        helper(startValue, target, 0);
        return mini;
    }
};

Right way of approaching this problem-

Time Complexity : O(logn)
Space Complexity : O(1)

class Solution {
public:
    int brokenCalc(int startValue, int target) {
        if(startValue >= target) return startValue - target;
        if(target % 2 == 0){ //TARGET IS EVEN
            return 1 + brokenCalc(startValue, target / 2);
        }
        return 1 + brokenCalc(startValue, target + 1);     
    }
};