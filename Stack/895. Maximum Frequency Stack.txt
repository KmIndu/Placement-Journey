Video Link:
https://www.youtube.com/watch?v=KVg4Y0sI4Iw

Discussion Section link:
https://leetcode.com/problems/maximum-frequency-stack/discuss/1861911/C%2B%2B-or-Easy-solution-with-explanation-or-Simple-solution

Time Complexity : O(1) FOR PUSH AND POP
Space Complexity : O(N)


EXPLANATION
We will take a variable max_frequency which indicate the maximum number of ocurrence.

We will consider a frequency map that will count the occurences of each element.
We will also consider a map group_stack which will group the elements with the same frequecy. Example if two elements have same count then we will add them in stack with the recent element at the top.
When we will push the elements
We will increment its frequency
Update the maximum occurence element
group the element with its frequency
When we will pop the element from stack
We will take out the max_frequency element.
Remove it from group_stack
Decrement its freuency
Return it

class FreqStack {
public:
    //This will store the count of each element
    unordered_map<int,int> frequency;
    //This will store the count of each element
     unordered_map<int,stack<int>> group_stack;
    //Maximum frequency possible
    int max_frequency=0;
    FreqStack() {
        
    }
    
    void push(int val) {
        //Increment the count
        frequency[val]++;
        //Check is this element occurs maximum time
        max_frequency=max(max_frequency,frequency[val]);
        //Map the element with its count
        group_stack[frequency[val]].push(val);
    }
    
    int pop() {
         //Find the max occurence element
        int top_max_frequency=group_stack[max_frequency].top();
        //Remove it from stack
        group_stack[max_frequency].pop();
        //Decrement its count
        frequency[top_max_frequency]--;
        //If there is no element of maximum frquency the decrement max_frequency
        if(group_stack[max_frequency].size()==0)
            max_frequency--;
        return top_max_frequency;
    }
};