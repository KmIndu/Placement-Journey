https://www.youtube.com/watch?v=NTop3VTjmxk&t=48s

Brute Force Approach -

Time Complexity - O(N1+N2)
Space Complexity - O(N1+N2)

class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        vector<int> finalArr(nums1.size()+nums2.size());
        double ans;
        int i=0,j=0,k=0;
        while(i<nums1.size() && j < nums2.size()){
            if(nums1[i] < nums2[j]){
                finalArr[k++] = nums1[i++];
            }
            else
                finalArr[k++] = nums2[j++];
        }
        while(i < nums1.size())
            finalArr[k++] = nums1[i++];
        while(j < nums2.size())
            finalArr[k++] = nums2[j++];
       
        if (finalArr.size() % 2 == 0)
            return double(finalArr[finalArr.size()/2]+finalArr[(finalArr.size()/2)-1])/2.0;
        else
            ans=double(finalArr[finalArr.size()/2]);
    
        return ans;
    }
};

Better Approach - 

Efficient Approach -
