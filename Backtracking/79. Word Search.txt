ek hi kaam ki video mili youtube pr... no other choice.

https://www.youtube.com/watch?v=mXWKVqGcL1M


Time Complexity - O(M * N * 4^L) and Space Complexity - O(L), where M*N - board size, L - Word length.

class Solution {
public:
    bool WordSearch(vector<vector<char>>& board, int i, int j, string word, int pos)
    {
        if(pos==word.length())
            return true;
        
        if(i<0||j<0||i>=board.size()||j>=board[0].size())
            return false;
        
        if(word[pos]!=board[i][j])
            return false;
        
        char temp=board[i][j];
        board[i][j]='*';
        
        if(WordSearch(board, i+1, j, word, pos+1)||
           WordSearch(board, i-1, j, word, pos+1)||
           WordSearch(board, i, j+1, word, pos+1)||
           WordSearch(board, i, j-1, word, pos+1))
            return true;
        
        board[i][j]=temp; // backtracking
        
        return false;
    }
    
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size();
        int n=board[0].size();
        for(int i=0; i<m; i++)
        {
            for(int j=0; j<n; j++)
            {
                if(word[0]==board[i][j] && WordSearch(board, i, j, word, 0))
                        return true;
            }
        }
        return false;
    }
};