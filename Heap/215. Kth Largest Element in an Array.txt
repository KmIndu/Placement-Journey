class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        
        //For fast I/O in C++
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        
        priority_queue<int, vector<int>, greater<int>> minheap;
        for(int i=0; i<nums.size(); i++)
        {
            minheap.push(nums[i]);
            if(minheap.size()>k)
            {
                minheap.pop();
            }
        }
        return minheap.top();
    }
};