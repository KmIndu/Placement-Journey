Here we came with a concept that first we will count the occurrences using map and then we`ll 
store occurrences in a vector because that`s what we actually need for deleting a number from an array and making a set for integers :


class Solution {
public:
    int minSetSize(vector<int>& arr) {
        unordered_map<int, int> map;
        int n=arr.size();
        int a=n/2;
        vector<int> v1, v2;
        for(int i=0; i<n; i++)
        {
            map[arr[i]]++;
        }
       for(auto it=map.begin();it!=map.end();it++){
            v1.push_back(it->second);      //store  the occurrences in a vector
        }
        sort(v1.begin(), v1.end());  // sort vector because we want first the maximum number of occurrence and then second max and so on
        int sum=0;
        int i=v1.size()-1;
        while(i>=0)
        {
            sum+=v1[i];
            v2.push_back(v1[i]);     // push the value in another vector so that we can return number of deleted integers
            if((n-sum)>a) i--;         // check if (n-sum)<=n/2 or not   if yes then break the loop
            else break;
        }
         return v2.size();
    }
};