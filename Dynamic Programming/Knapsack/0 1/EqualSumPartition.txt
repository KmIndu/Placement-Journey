#include<bits/stdc++.h>
using namespace std;

bool subsetsum(int sum, int arr[], int n);

bool findpartition(int arr[], int n)
{
    int sum = 0;
    bool t[n+1][sum+1];
    
    for (int i = 0; i < n; i++)
    {
        sum+=arr[i];
    }
    for (int i = 1; i < n+1; i++)
    {
        for(int j=1; j<sum+1; j++)
        {
            if(sum%2!=0)
            {
                t[i][j]= false;
            }
            else if(sum%2==0)
            {
                t[i][j]= subsetsum(sum/2, arr, n);
            } 
        }
    }
    return t[n][sum];
}

bool subsetsum(int sum, int arr[], int n)
{
    bool t[n+1][sum+1];
    
    for(int i=0; i<n+1; i++)
    {
        for(int j=0; j<sum+1; j++)
        {
            if(j==0)
            {
              t[i][j]=1;
            }
            if(i==0 && j!=0)
            {
              t[i][j]=0;
            }
            
        }
    }
    for(int i=1; i<n+1; i++)
    {
        for(int j=1; j<sum+1; j++)
        {
            if(arr[i-1]<=j)
            {
                t[i][j]= t[i-1][j-arr[i-1]]|| t[i-1][j];
            }
            else
            {
                t[i][j]=t[i-1][j];
                
            }
        }
    }
    return t[n][sum];
      
}

int main()
{
    int n;
    cin>>n;
    
    int arr[n];
    
    for(int i=0; i<n; i++)
    {
        cin>>arr[i];
    }
    
    cout<<findpartition(arr, n);
    return 0;
}