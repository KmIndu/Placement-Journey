Striver ki video ka link:

https://www.youtube.com/watch?v=kouxiP_H5WE

There are couples of steps that I should think while approaching this question:
1. Search node in the BST.
2. Delete node in the BST.

class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) 
    {
        if (root == NULL) 
        {
            return NULL;
        }
        
        if (root->val == key) {
            return helper(root);
        }
        
        TreeNode* dummy=root;
        while(root!=NULL)
        {
            if(root->val>key)
            {
                if(root->left!=NULL && root->left->val==key)
                {
                    root->left = helper(root->left);
                    break;
                }
                else
                {
                    root=root->left;
                }
            }
            else 
            {
                if (root->right != NULL && root->right->val == key) 
                {
                    root->right = helper(root->right);
                    break;
                } 
                else 
                {
                    root = root->right;
                }
            }
        }
        return dummy;
    }
        
     TreeNode* helper(TreeNode* root) 
     {
            if (root->left == NULL) 
            {
                return root->right;
            } 
            else if (root->right == NULL)
            {
                return root->left;
            } 
            TreeNode* rightChild = root->right;
            TreeNode* lastRight = findLastRight(root->left);
            lastRight->right = rightChild;
            return root->left;
    }
        
    TreeNode* findLastRight(TreeNode* root) 
    {
        if (root->right == NULL) 
        {
            return root;
        }
        return findLastRight(root->right);
    }
};