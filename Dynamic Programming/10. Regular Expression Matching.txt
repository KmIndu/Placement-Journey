https://www.youtube.com/watch?v=DJvw8jCmxUU&t=382s

class Solution {
public:
    bool isMatch(string s, string p) {
        int m=p.length();// making it rows
        int n=s.length();// making its coloumns
        bool dp[m+1][n+1];
        
        for(int i=0; i<m+1; i++)
        {
            for(int j=0; j<n+1; j++)
            {
                if(i==0 && j==0)
                {
                   // for the first block
                   dp[i][j]=true; 
                }
                else if(i==0)
                {
                   // first row with false
                   dp[i][j]=false; 
                }
                else if(j==0)
                {
                   // first coloumn
                   char pc=p[i-1];
                    
                    if(pc=='*')
                    {
                        // if star then check two row above
                        dp[i][j]=dp[i-2][j];
                    }
                    else
                    {
                        // otherwise directly false
                        dp[i][j]=false;
                    }
                    
                }
                else
                {
                    // for other blocks
                    char pc=p[i-1];
                    char sc=s[j-1];
                    
                    if(pc=='*')
                    {
                        // ye toh hr baar krna he hai hume
                        dp[i][j]=dp[i-2][j];
                        
                        char pslc=p[i-2];
                        
                        if(pslc=='.' || pslc==sc)
                        {
                            // if same then taking or of both 
                             dp[i][j]= dp[i][j]||dp[i][j-1];
                        }
                    }
                    else if(pc=='.')
                    {
                        // checking only diagonally
                        dp[i][j]=dp[i-1][j-1];
                    }
                    else if(pc==sc)
                    {
                        // checking only diagonally
                        dp[i][j]=dp[i-1][j-1];
                    }
                    else
                    {
                        // not equal
                        dp[i][j]=false;
                    }
                }
            }
        }
        return dp[m][n];
    }
};