// { Driver Code Starts
// Initial template for C++

#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
//User function template in C++

class Solution 
{
    public:
    bool isvalid(int A[], int N, int M, int mid)
    {
        int studentsRequired=1;
        int curr_sum=0;
        for(int i=0; i<N; i++)
        {
            curr_sum+=A[i];
            if(curr_sum>mid)
            {
                 studentsRequired++;
                 curr_sum=A[i];
            }
            if(studentsRequired>M)
            {
                return false;
            }
        }
        return true;
    }
    
    //Function to find minimum number of pages.
    int findPages(int A[], int N, int M) 
    {
        if(N<M)
        {
            return -1;
        }
        long sum=0;
        for(int i=0; i<N; i++)
        {
            sum+=A[i];
        }
        
        int start=*max_element(A, A+N);
        int end=sum;
        int result=-1;
        
        while(start<=end)
        {
            int mid=start+((end-start)/2);
            if(isvalid(A, N, M, mid)== true)
            {
                result=mid;
                end=mid-1;
            }
            else
            {
                start=mid+1;
            }
        }
        return result;
    }
};

// { Driver Code Starts.

int main() {
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int A[n];
        for(int i=0;i<n;i++){
            cin>>A[i];
        }
        int m;
        cin>>m;
        Solution ob;
        cout << ob.findPages(A, n, m) << endl;
    }
    return 0;
}
  // } Driver Code Ends